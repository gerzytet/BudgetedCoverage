let data = `89.95 7.9
88.75 7.9
88.98 7.84
90.1 7.99
88.77 9.32
88.25 11.02
87.68 11.82
86.19 11.91
84.76 13.34
84.33 14.32
84.33 15.48
84.33 16.68
84.15 17.7
82.93 17.7
81.48 17.7
79.84 17.7
78.67 17.7
79.16 18.36
80.03 19.23
80.41 20.47
80.41 22.06
80.39 23.51
78.78 25.2
78.46 26.89
77.61 27.5
76.5 27.94
76.38 29.45
74.56 29.46
73.38 29.46
72.11 29.46
70.43 29.46
68.76 29.46
68.66 30.98
67.58 32.47
66.43 33.38
64.75 33.38
63.08 33.38
61.41 33.38
60.0 33.38
58.61 33.6
56.91 35.41
56.9 36.8
56.7 37.29
55.14 37.29
53.76 38.45
52.37 39.25
51.06 39.27
51.02 40.23
51.02 41.31
51.02 42.48
50.72 43.45
49.12 45.05
47.39 46.78
47.1 48.06
47.1 50.76
46.04 51.01
45.14 51.64
44.88 53.21
43.24 54.87
43.18 57.01
43.17 58.71
41.66 58.85
39.97 58.85
38.81 59.28
37.82 60.28
36.71 60.81
35.35 60.77
35.28 59.36
34.6 58.85
33.22 58.85
32.04 58.85
30.38 58.85
29.4 58.4
29.4 57.45
28.95 56.89
27.52 56.89
26.31 56.89
25.54 57.22
25.54 59.22
25.33 60.81
23.74 60.81
21.82 60.81
18.82 60.81
16.15 60.81
15.68 59.76
15.11 58.85
13.78 58.95
13.78 60.51
12.66 60.81
11.09 60.81
9.99 60.82
9.86 62.45
8.81 62.77
6.64 62.77
5.61 63.09
5.17 63.52
4.75 63.94
4.31 64.39
3.44 64.73

94.12 17.75
94.13 18.67
93.99 19.78
93.19 20.58
92.41 21.36
91.46 21.62
90.36 21.62
89.0 22.81
87.88 23.93
86.58 25.23
84.76 25.54
84.33 26.48
83.76 28.06
82.12 29.69
81.35 30.46
80.58 31.23
80.41 32.28
80.39 33.33
78.57 33.38
77.05 33.38
75.92 33.38
74.8 33.38
73.15 33.38
71.51 33.38
69.72 33.38
68.07 33.38
66.08 33.38
64.74 33.38
63.26 33.38
61.77 33.38
60.22 33.38
58.81 33.45
57.04 35.18
56.9 36.48
56.58 37.29
55.12 37.3
53.8 38.41
52.51 39.25
51.14 39.25
51.02 40.08
51.02 41.07
51.02 42.18
50.89 43.28
49.2 44.97
47.63 46.54
47.1 47.51
47.1 50.05
46.69 51.01
45.16 51.1
45.14 52.84
44.19 53.91
43.18 55.7
43.18 57.92
42.82 58.85
41.13 58.85
39.62 58.85
38.7 59.39
37.76 60.33
36.73 60.81
35.42 60.8
35.28 59.5
34.82 58.85
33.48 58.85
32.32 58.85
31.09 58.85
29.41 58.64
29.4 57.8
29.4 56.99
28.43 56.89
27.17 56.89
26.06 56.89
25.54 57.53
25.54 59.48
25.34 60.81
23.85 60.81
22.24 60.81
19.63 60.81
17.06 60.81
15.68 60.54
15.67 58.95
14.37 58.85
13.78 59.52
13.54 60.81
11.74 60.81
10.64 60.81
9.56 60.81
8.42 60.81
7.28 60.81
6.15 60.81
5.03 60.81
4.08 60.8
4.89 60.75

82.39 94.1
81.79 93.58
81.18 92.97
80.59 92.38
79.43 93.13
77.34 94.12
76.43 93.41
75.86 92.16
73.12 92.16
72.51 90.87
72.51 88.36
74.2 86.51
73.19 84.98
71.41 84.32
70.09 83.84
68.93 82.68
67.08 82.36
66.63 81.42
66.11 80.4
64.27 80.4
61.44 80.4
60.75 79.52
60.75 76.82
60.75 74.08
60.59 72.57
59.03 72.57
58.79 70.95
58.79 69.59
58.79 68.04
58.54 66.41
56.84 64.42
56.84 61.65
56.07 60.81
53.32 60.81
52.92 59.5
52.33 58.85
50.96 58.31
50.96 55.75
50.96 54.47
50.78 52.97
48.39 52.97
46.52 52.43
44.96 51.02
43.19 50.95
43.12 49.13
41.79 49.05
41.16 47.55
41.15 45.15
39.5 45.13
36.17 45.13
32.87 45.13
31.36 44.84
31.26 43.17
29.51 43.17
28.29 42.05
27.66 41.16
29.29 41.15
30.41 40.16
31.36 38.97
31.36 37.3
30.06 35.98
29.4 34.5
29.4 32.68
29.4 31.59
28.09 31.42
27.44 30.76
27.44 29.46
27.44 27.76
27.44 26.01
26.42 25.54
25.48 24.77
25.48 23.14
25.27 21.62
23.61 21.57
23.52 19.87
22.38 18.5
20.82 16.94
19.78 15.9
19.6 14.14
18.38 12.54
15.67 11.76
13.72 9.55
13.56 7.91
11.85 7.87
11.64 5.81
9.8 3.8
9.8 2.14
9.8 0.5

7.87 33.31
9.29 33.31
12.14 33.31
14.55 33.31
16.77 33.31
17.7 33.96
17.79 35.27
19.43 35.27
20.61 36.24
22.12 37.75
23.54 39.17
24.99 39.19
26.33 40.0
27.51 41.17
28.52 42.19
29.42 43.09
30.33 43.11
31.31 43.12
31.42 44.09
31.43 45.0
32.62 45.07
34.36 45.07
36.29 45.07
37.68 45.07
38.72 45.07
39.95 45.07
41.22 45.34
41.22 47.44
41.48 48.99
43.08 48.99
43.18 50.28
43.93 50.95
45.3 51.13
46.89 52.72
47.91 52.91
50.23 52.91
51.02 53.5
51.02 55.03
51.02 56.92
51.02 58.08
51.35 58.79
52.22 58.79
52.98 58.91
52.98 60.05
53.42 60.75
55.05 60.75
55.9 60.75
56.7 60.75
56.9 62.07
56.9 64.04
57.79 65.57
58.86 66.93
58.86 68.21
58.86 69.79
58.86 71.05
58.86 72.35
59.71 72.5
60.74 72.53
60.82 73.87
60.82 75.88
60.82 78.82
60.98 80.34
62.67 80.35
62.78 81.95
62.78 84.05
63.61 84.26
64.82 84.26
66.77 84.26
67.9 84.26
68.66 84.6
68.66 86.51
68.66 87.89
69.67 89.21
71.0 90.14
72.5 90.16
72.58 91.5
73.06 92.1
75.18 92.1
76.5 92.38
76.5 93.98
77.61 94.06
78.46 94.34
78.47 95.95
79.53 96.02
80.88 96.02`

vehicles = []

function setup() {
  let v_split = data.split('\n')
  curr_v = []
  for (let i = 0; i < v_split.length; i++) {
    if (v_split[i] == "") {
      vehicles.push(curr_v)
      curr_v = []
    } else {
      point = v_split[i].split(" ").map(parseFloat)
      curr_v.push(point)
    }


  }

  if (curr_v.length > 0) {
    vehicles.push(curr_v)
  }

  console.log(vehicles)
  scale = 4
  createCanvas(100 * scale, 100 * scale)
  for (let i = 0; i < vehicles.length; i++) {
    vehicleRevs[i] = false
    vehicleCounters[i] = 0
    colors[i] = [
      floor(Math.random() * 256),
      floor(Math.random() * 256),
      floor(Math.random() * 256)
    ]
  }
}

var colors = Array(vehicles.length)
var vehicleRevs = Array(vehicles.length)
var vehicleCounters = Array(vehicles.length)
var scale
function draw() {
  background(220)
  for (let i = 0; i < vehicles.length; i++) {
    if (vehicleRevs[i]) {
      vehicleCounters[i]--
      if (vehicleCounters[i] === 0) {
        vehicleRevs[i] = false
      }
    } else {
      vehicleCounters[i]++
      if (vehicleCounters[i] === vehicles[i].length - 1) {
        vehicleRevs[i] = true
      }
    }

    point = vehicles[i][vehicleCounters[i]]
    color = colors[i]
    fill(color[0], color[1], color[2])
    circle(point[0] * scale, point[1] * scale, 4 * scale)

  }
}
